{"ast":null,"code":"var _jsxFileName = \"/Users/shelbypalumbo/tic_tac_toe/src/components/Game.js\";\nimport React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport { calculateWinner } from \"../helpers\";\nconst style = {\n  width: \"200px\",\n  margin: \"20px auto\"\n};\n\nfunction Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(history);\n\n  const handleClick = i => {\n    const boardDuplicate = [...history]; //If user clicks on an occupied square or if there is a winner, return\n    //else if xIsNext is true then \"X\" otherwise \"O\"\n    //setHistory state values\n\n    if (winner || boardDuplicate[i]) return;\n    boardDuplicate[i] = xIsNext ? \"X\" : \"O\";\n    setHistory(boardDuplicate);\n    setXIsNext(!xIsNext);\n  };\n\n  const jumpTo = () => {};\n\n  const renderMoves = () => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setHistory(Array(9).fill(null)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"Start the Game!\");\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Board, {\n    squares: history,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, winner ? \"Winner \" + winner : \"Next Player \" + (xIsNext ? \"X\" : \"O\"), renderMoves())));\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/shelbypalumbo/tic_tac_toe/src/components/Game.js"],"names":["React","useState","Board","calculateWinner","style","width","margin","Game","history","setHistory","Array","fill","stepNumber","setStepNumber","xIsNext","setXIsNext","winner","handleClick","i","boardDuplicate","jumpTo","renderMoves"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,YAAhC;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,OADK;AAEZC,EAAAA,MAAM,EAAE;AAFI,CAAd;;AAKA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAACS,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAD,CAAtC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMe,MAAM,GAAGb,eAAe,CAACK,OAAD,CAA9B;;AAEA,QAAMS,WAAW,GAAGC,CAAC,IAAI;AACvB,UAAMC,cAAc,GAAG,CAAC,GAAGX,OAAJ,CAAvB,CADuB,CAEvB;AACA;AACA;;AACA,QAAIQ,MAAM,IAAIG,cAAc,CAACD,CAAD,CAA5B,EAAiC;AACjCC,IAAAA,cAAc,CAACD,CAAD,CAAd,GAAoBJ,OAAO,GAAG,GAAH,GAAS,GAApC;AACAL,IAAAA,UAAU,CAACU,cAAD,CAAV;AACAJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GATD;;AAWA,QAAMM,MAAM,GAAG,MAAM,CAAE,CAAvB;;AAEA,QAAMC,WAAW,GAAG,mBAClB;AAAQ,IAAA,OAAO,EAAE,MAAMZ,UAAU,CAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF;;AAMA,sBACE,uDACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEH,OAAhB;AAAyB,IAAA,OAAO,EAAES,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,KAAK,EAAEb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,MAAM,GAAG,YAAYA,MAAf,GAAwB,kBAAkBF,OAAO,GAAG,GAAH,GAAS,GAAlC,CADjC,EAEGO,WAAW,EAFd,CADF,CAFF,CADF;AAWD;;AACD,eAAed,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport { calculateWinner } from \"../helpers\";\n\nconst style = {\n  width: \"200px\",\n  margin: \"20px auto\"\n};\n\nfunction Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(history);\n\n  const handleClick = i => {\n    const boardDuplicate = [...history];\n    //If user clicks on an occupied square or if there is a winner, return\n    //else if xIsNext is true then \"X\" otherwise \"O\"\n    //setHistory state values\n    if (winner || boardDuplicate[i]) return;\n    boardDuplicate[i] = xIsNext ? \"X\" : \"O\";\n    setHistory(boardDuplicate);\n    setXIsNext(!xIsNext);\n  };\n\n  const jumpTo = () => {};\n\n  const renderMoves = () => (\n    <button onClick={() => setHistory(Array(9).fill(null))}>\n      Start the Game!\n    </button>\n  );\n\n  return (\n    <>\n      <Board squares={history} onClick={handleClick} />\n      <div style={style}>\n        <p>\n          {winner ? \"Winner \" + winner : \"Next Player \" + (xIsNext ? \"X\" : \"O\")}\n          {renderMoves()}\n        </p>\n      </div>\n    </>\n  );\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}