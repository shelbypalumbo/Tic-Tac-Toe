{"ast":null,"code":"var _jsxFileName = \"/Users/shelbypalumbo/tic_tac_toe/src/components/Game.js\";\nimport React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport { calculateWinner } from \"../helpers\";\n\nfunction Game() {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = i => {\n    const boardDuplicate = [...board]; //If user clicks on an occupied squae or if there is a winner return\n\n    if (winner || boardDuplicate[i]) return;\n    boardDuplicate[i] = xIsNext ? \"X\" : \"O\";\n    setBoard(boardDuplicate);\n    setXIsNext(!xIsNext);\n  };\n\n  const jumpTo = () => {};\n\n  const renderMoves = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Tic Tac Toe Game\"), /*#__PURE__*/React.createElement(Board, {\n    squares: board,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/shelbypalumbo/tic_tac_toe/src/components/Game.js"],"names":["React","useState","Board","calculateWinner","Game","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","handleClick","i","boardDuplicate","jumpTo","renderMoves"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACM,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMU,MAAM,GAAGR,eAAe,CAACE,KAAD,CAA9B;;AAEA,QAAMO,WAAW,GAAGC,CAAC,IAAI;AACvB,UAAMC,cAAc,GAAG,CAAC,GAAGT,KAAJ,CAAvB,CADuB,CAEvB;;AACA,QAAIM,MAAM,IAAIG,cAAc,CAACD,CAAD,CAA5B,EAAiC;AACjCC,IAAAA,cAAc,CAACD,CAAD,CAAd,GAAoBJ,OAAO,GAAG,GAAH,GAAS,GAApC;AACAH,IAAAA,QAAQ,CAACQ,cAAD,CAAR;AACAJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAPD;;AASA,QAAMM,MAAM,GAAG,MAAM,CAAE,CAAvB;;AACA,QAAMC,WAAW,GAAG,MAAM,CAAE,CAA5B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEX,KAAhB;AAAuB,IAAA,OAAO,EAAEO,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AACD,eAAeR,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport { calculateWinner } from \"../helpers\";\n\nfunction Game() {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = i => {\n    const boardDuplicate = [...board];\n    //If user clicks on an occupied squae or if there is a winner return\n    if (winner || boardDuplicate[i]) return;\n    boardDuplicate[i] = xIsNext ? \"X\" : \"O\";\n    setBoard(boardDuplicate);\n    setXIsNext(!xIsNext);\n  };\n\n  const jumpTo = () => {};\n  const renderMoves = () => {};\n\n  return (\n    <div>\n      <h1>Tic Tac Toe Game</h1>\n      <Board squares={board} onClick={handleClick} />\n    </div>\n  );\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}